stages:
  - build
  - deploy

build:
  stage: build
  variables:
    IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    IMAGE_LATEST: ${CI_REGISTRY_IMAGE}:latest
    GIT_STRATEGY: fetch
    GIT_DEPTH: "1"
  script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build --build-arg BUILD_CONFIGURATION -t "${IMAGE_TAG}" -t "${IMAGE_LATEST}" .
    - docker push "${IMAGE_TAG}"
    - docker push "${IMAGE_LATEST}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy:
  stage: deploy
  needs:
    - build
  variables:
    IMAGE_TAG: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    IMAGE_LATEST: ${CI_REGISTRY_IMAGE}:latest
    GIT_STRATEGY: none
  script:
    - chmod 400 "${SSH_PROD_PRIVATE_KEY}"
    - ssh -i "${SSH_PROD_PRIVATE_KEY}" -o StrictHostKeyChecking=no infoeducatie@d.tdrs.ro "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY} && /opt/docker/websites/portal.infoeducatie.ro/deploy.sh ${IMAGE_TAG} && docker logout ${CI_REGISTRY}"
  rules:
    - if: $CI_COMMIT_BRANCH == "main"