@using InfoEducatie.Main.InfoEducatieAdmin
@using MCMS.Base.Extensions
@using MCMS.Base.Helpers
@using MCMS.Base.Repositories
@using MCMS.SwaggerFormly
@using MCMS.SwaggerFormly.FormParamsHelpers

@inject ITranslationsRepository TransRepo

@{
    ViewBag.Title = "CloneCriteriaFromProjectToOpenForCategory".ToSpacedPascalCase();

    var formParamsService = new FormParamsService(Url, TypeHelpers.GetControllerName(typeof(InfoEducatieAdminApiController)),
        nameof(CloneCriteriaFromProjectToOpenForCategoryFormModel)) {SubmitActionName = nameof(InfoEducatieAdminApiController.CloneCriteriaFromProjectToOpenForCategory)};

    var formParams = formParamsService.ForCreate();
    formParams.AddOption("hideSubmitButton", true);
}

<div class="modal-body" id="@formParams.FormInstanceId-modal-body">
    @await Html.BlindPartialAsync("Formly/FormlyForm", formParams)
    <pre class="results-container"></pre>
    <div>
        <div class="alert alert-danger">
            Atenție! Dacă ștergi criteriile deja existente se vor șterge automat și punctajele puse pe aceste criterii.
        </div>
    </div>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-secondary" onclick="close@(formParams.FormInstanceId)()">@await TransRepo.GetValueOrSlug("cancel")</button>
    <button type="button" class="btn btn-primary" id="@formParams.FormInstanceId-submit-button">Clone</button>
</div>
@using (Html.BeginMPageScripts())
{
    <script>
       function callback@(formParams.FormInstanceId)(sender, params) {
           console.log(params);
           $(".results-container").html(JSON.stringify(params, null, "  "))
       }
       function close@(formParams.FormInstanceId)() {
            var modal = $("#@formParams.FormInstanceId-modal-body").closest(".modal");
            modal.modal('hide');
       }
    </script>
}